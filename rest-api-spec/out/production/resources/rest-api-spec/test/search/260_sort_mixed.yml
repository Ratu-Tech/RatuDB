"search across indices with mixed long and double numeric types":
  - skip:
      version: " - 2.6.99"
      reason: relies on numeric sort optimization that landed in 2.7.0 only

  - do:
      indices.create:
        index: test_1
        body:
          settings:
            number_of_shards: "1"
            number_of_replicas: "0"
          mappings:
            properties:
              counter:
                type: long

  - do:
      indices.create:
        index: test_2
        body:
          settings:
            number_of_shards: "1"
            number_of_replicas: "0"
          mappings:
            properties:
              counter:
                type: double
  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_1
          - counter: 223372036854775800
          - index:
              _index: test_2
          - counter: 1223372036854775800.23
          - index:
              _index: test_2
          - counter: 184.4

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: desc }]
  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 1223372036854775800.23 }
  - match: { hits.hits.0.sort: [1223372036854775800.23] }
  - match: { hits.hits.1._index: test_1 }
  - match: { hits.hits.1._source.counter: 223372036854775800 }
  - match: { hits.hits.1.sort: [223372036854775800] }

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: asc }]
  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 184.4 }
  - match: { hits.hits.0.sort: [184.4] }
  - match: { hits.hits.1._index: test_1 }
  - match: { hits.hits.1._source.counter: 223372036854775800 }
  - match: { hits.hits.1.sort: [223372036854775800] }
